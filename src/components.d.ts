/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface StoneGrid {
    'cols': number;
    'colsGap': string;
    'horizontalContentAlign': string;
    'horizontalItemsAlign': string;
    'inline': boolean;
    'rows': number;
    'rowsGap': string;
    'stack': boolean;
    'templateAreas': string;
    'templateCols': string;
    'templateRows': string;
    'verticalContentAlign': string;
    'verticalItemsAlign': string;
  }
  interface StoneGridCell {
    'area': string;
    'col': string;
    'horizontalAlign': string;
    'row': string;
    'verticalAlign': string;
  }
  interface StoneInline {}
  interface StoneLabel {
    'color': string;
  }
  interface StoneStack {}
}

declare global {


  interface HTMLStoneGridElement extends Components.StoneGrid, HTMLStencilElement {}
  var HTMLStoneGridElement: {
    prototype: HTMLStoneGridElement;
    new (): HTMLStoneGridElement;
  };

  interface HTMLStoneGridCellElement extends Components.StoneGridCell, HTMLStencilElement {}
  var HTMLStoneGridCellElement: {
    prototype: HTMLStoneGridCellElement;
    new (): HTMLStoneGridCellElement;
  };

  interface HTMLStoneInlineElement extends Components.StoneInline, HTMLStencilElement {}
  var HTMLStoneInlineElement: {
    prototype: HTMLStoneInlineElement;
    new (): HTMLStoneInlineElement;
  };

  interface HTMLStoneLabelElement extends Components.StoneLabel, HTMLStencilElement {}
  var HTMLStoneLabelElement: {
    prototype: HTMLStoneLabelElement;
    new (): HTMLStoneLabelElement;
  };

  interface HTMLStoneStackElement extends Components.StoneStack, HTMLStencilElement {}
  var HTMLStoneStackElement: {
    prototype: HTMLStoneStackElement;
    new (): HTMLStoneStackElement;
  };
  interface HTMLElementTagNameMap {
    'stone-grid': HTMLStoneGridElement;
    'stone-grid-cell': HTMLStoneGridCellElement;
    'stone-inline': HTMLStoneInlineElement;
    'stone-label': HTMLStoneLabelElement;
    'stone-stack': HTMLStoneStackElement;
  }
}

declare namespace LocalJSX {
  interface StoneGrid {
    'cols'?: number;
    'colsGap'?: string;
    'horizontalContentAlign'?: string;
    'horizontalItemsAlign'?: string;
    'inline'?: boolean;
    'rows'?: number;
    'rowsGap'?: string;
    'stack'?: boolean;
    'templateAreas'?: string;
    'templateCols'?: string;
    'templateRows'?: string;
    'verticalContentAlign'?: string;
    'verticalItemsAlign'?: string;
  }
  interface StoneGridCell {
    'area'?: string;
    'col'?: string;
    'horizontalAlign'?: string;
    'row'?: string;
    'verticalAlign'?: string;
  }
  interface StoneInline {}
  interface StoneLabel {
    'color'?: string;
  }
  interface StoneStack {}

  interface IntrinsicElements {
    'stone-grid': StoneGrid;
    'stone-grid-cell': StoneGridCell;
    'stone-inline': StoneInline;
    'stone-label': StoneLabel;
    'stone-stack': StoneStack;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'stone-grid': LocalJSX.StoneGrid & JSXBase.HTMLAttributes<HTMLStoneGridElement>;
      'stone-grid-cell': LocalJSX.StoneGridCell & JSXBase.HTMLAttributes<HTMLStoneGridCellElement>;
      'stone-inline': LocalJSX.StoneInline & JSXBase.HTMLAttributes<HTMLStoneInlineElement>;
      'stone-label': LocalJSX.StoneLabel & JSXBase.HTMLAttributes<HTMLStoneLabelElement>;
      'stone-stack': LocalJSX.StoneStack & JSXBase.HTMLAttributes<HTMLStoneStackElement>;
    }
  }
}


